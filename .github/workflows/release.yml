name: Release to GitHub Packages

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type (major, minor, patch)'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
      dry-run:
        description: 'Dry run (no actual publish)'
        required: false
        default: false
        type: boolean

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      # These will be used by GitHub Actions
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Add any other secrets needed from .env
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          registry-url: 'https://npm.pkg.github.com'
          scope: '@${{ github.repository_owner }}'
      
      - name: Install dependencies
        run: bun install
      
      - name: Run linter
        run: bun run lint
      
      - name: Run tests
        run: bun run test:all
      
      - name: Build
        run: bun run build
      
      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      
      - name: Setup .npmrc for GitHub Packages
        run: |
          echo "@${{ github.repository_owner }}:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" >> .npmrc
      
      - name: Set version from release
        if: github.event_name == 'release'
        run: echo "NEW_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      
      - name: Bump version
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: Create Git tag
        if: github.event_name == 'workflow_dispatch'
        run: |
          git add package.json
          git commit -m "chore: bump version to v${{ env.NEW_VERSION }}"
          git tag -a "v${{ env.NEW_VERSION }}" -m "Release v${{ env.NEW_VERSION }}"
      
      - name: Publish to GitHub Packages
        if: ${{ github.event.inputs.dry-run == 'false' || github.event_name == 'release' }}
        run: bun publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Dry run (no publish)
        if: ${{ github.event.inputs.dry-run == 'true' && github.event_name == 'workflow_dispatch' }}
        run: bun publish --dry-run --access=public
      
      - name: Push changes
        if: ${{ (github.event.inputs.dry-run == 'false' && github.event_name == 'workflow_dispatch') }}
        run: git push && git push --tags 